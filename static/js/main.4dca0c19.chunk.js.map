{"version":3,"sources":["pages/BankDetails/index.js","pages/Home/redux/actionTypes.js","api/index.js","pages/Home/redux/actions.js","pages/Home/redux/reducer.js","components/Pagination/Pagination.js","utility/Links.js","components/CachedSearch/CachedSearch.js","components/Loader/Loader.js","pages/Home/index.js","routes/AppRoute.js","components/NavBar/NavBar.js","components/Footer/Footer.js","App.js","store/rootReducer.js","store/index.js","serviceWorker.js","index.js"],"names":["BankDetails","state","bankID","this","props","match","params","bank_id","setState","_this2","firstArray","JSON","parse","localStorage","getItem","filter","element","Number","slice","classes","item","map","items","react_default","a","createElement","className","cardContainer","key","Card","card","CardMedia","media","image","title","bank_name","CardContent","Typography","variant","component","bottomDetails","city","ifsc","branch","address","Fragment","Component","withStyles","theme","boxShadow","&:hover","transition","height","paddingTop","marginLeft","marginRight","width","marginBottom","marginTop","margin","fontSize","LOADING","LOADED","api","transformCityCase","toUpperCase","fetch","concat","response","json","results","console","log","_context","t0","getBankData","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","getState","bank","wrap","prev","next","type","types","getBankDetails","sent","stop","_x","_x2","apply","arguments","initialState","Immutable","loading","Pagination","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handlePageSizeChange","event","pageSize","target","value","pager","length","setPage","initialPage","prevProps","prevState","page","_this$props","totalPages","getPager","pageOfItems","startIndex","endIndex","onChangePage","totalItems","currentPage","startPage","endPage","Math","ceil","min","pages","toConsumableArray","Array","keys","i","onClick","index","React","defaultProps","Links","id","CachedSearch","searchFunction","resultsHandler","query","queryCount","cache","cacheHits","cacheHitsHistory","then","Loader","loadText","loadingContainer","centered","CircularProgress","color","_loadingContainer","position","top","backgroundColor","zIndex","defineProperty","breakpoints","down","up","only","left","between","display","justifyContent","flexDirection","alignItems","textAlign","Home","handleChange","actions","cityName","handleQueryChange","changeQuery","handleResults","labelWidth","Promise","resolve","reject","regex","RegExp","dataField","test","setItem","stringify","components_Loader_Loader","join","Grid","container","direction","justify","FormControl","formControl","InputLabel","ref","InputLabelRef","htmlFor","Select","native","onChange","style","input","OutlinedInput","name","selectPaddingOpt","search","searchIcon","Search_default","InputBase","placeholder","_ref2","root","inputRoot","inputInput","inputProps","aria-label","tbleHeader","scope","react_router_dom","to","links","district","components_Pagination_Pagination","InputPageSizeRef","pgSize","connect","selectors","flexGrow","borderRadius","shape","fade","palette","common","white","spacing","pointerEvents","padding","transitions","create","&:focus","&::placeholder","opacity","paginationContainer","minWidth","selectEmpty","AppRoutes","react_router","path","AppContainer","background","AppBar","Toolbar","textDecoration","noWrap","FootContainer","role","NavBar","AppRoute","Footer","App","reducer","combineReducers","home","undefined","action","objectSpread","middlewares","thunk","store","compose","applyMiddleware","createStore","Boolean","window","location","hostname","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4dca0c19.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst Styles = theme => ({\n    card: {\n    //   maxWidth: 545,\n    boxShadow: '12px 15px 20px rgba(0, 0, 0, 0.1)',\n    '&:hover': {\n      boxShadow: '12px 15px 20px rgba(0, 0, 0, 0.1)',\n      transition: \"0.2s box-shadow ease-in-out, 0.2s background-color ease-in-out, 0.2s border-color ease-in-out\"\n    },\n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n    cardContainer:{\n        marginLeft:'auto',\n        marginRight:'auto',\n        width:'70%',\n        marginBottom:50,\n        marginTop:50\n    },\n    bottomDetails:{\n        margin:'5px 0 5px 0'\n    },\n    title:{\n        fontSize:'5em'\n    }\n  });\n  \n\nclass BankDetails extends Component{ \n    state={\n        bankID:'',\n    }\n    componentDidMount(){\n        let bankID = this.props.match.params.bank_id;\n        this.setState({bankID:bankID});\n    }\n    render(){\n        // console.log(this.state.bankID)\n        const retrievingData = JSON.parse(localStorage.getItem('bankLocalData'))\n        const newArray = retrievingData.filter(element => element.bank_id === Number(this.state.bankID));\n        const firstArray = newArray.slice(0,1);\n        const { classes } =this.props;\n        // console.log(firstArray)\n        const item = firstArray.map(items=>{\n            return(\n                <div className={classes.cardContainer} key={items.bank_id +'p'}>\n                <Card className={classes.card} >\n                    <CardMedia\n                        className={classes.media}\n                        image=\"Images/bank2.jpeg\"\n                        title={items.bank_name}\n                    />\n                    <CardContent>\n                    <Typography variant=\"h5\" component=\"h2\" className={classes.bottomDetails}>\n                         Bank Name : {items.bank_name}\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h2\" className={classes.bottomDetails}>\n                         Location : {items.city +' ,' +items.state}\n                        </Typography>\n                        <hr/>\n                        <Typography variant=\"h5\" component=\"h2\" className={classes.bottomDetails} >\n                         IFSC : {items.ifsc} \n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h2\"  className={classes.bottomDetails} >\n                         Branch : {items.branch} \n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h2\"  className={classes.bottomDetails} >\n                         Address : {items.address}   \n                        </Typography>\n                    </CardContent>\n                    \n            </Card>\n            </div>\n            )\n        })\n    return(\n        <>\n          {item}\n        </>\n    )\n}\n}\nexport default withStyles(Styles)(BankDetails);","export const LOADING = 'home.LOADING';\nexport const LOADED = 'home.LOADED';","// This file contains api call\nconst API_DOMAIN = 'https://vast-shore-74260.herokuapp.com';\n\nclass API {\n  async getBankDetails(city) {\n     let transformCityCase = city.toUpperCase(); \n    try {\n      let response = await fetch(`${API_DOMAIN}/banks?city=${transformCityCase}`);\n      let results = await response.json();\n      // console.log(response);\n      return results;\n    } catch (error) {\n      console.log(error);\n      return [];\n    }\n  }\n  \n}\n\nexport default new API();","import * as types from './actionTypes';\nimport api from '../../../api';\n\nexport function getBankData(city) {\n  // body...\n  return async (dispatch, getState) => {\n    dispatch({\n      type: types.LOADING,\n    });\n    try {\n      const bank = await api.getBankDetails(city);\n      // console.log(bank)\n      dispatch({\n        type: types.LOADED,\n        bank,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n","import * as types from './actionTypes';\nimport Immutable from 'seamless-immutable';\n\nconst initialState = Immutable({\n  loading: true,\n  bank: [],\n});\n\nexport default function reduce(state = initialState, action = {}) {\n  switch (action.type) {\n    case types.LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case types.LOADED:\n      return {\n        ...state,\n        loading: false,\n        bank: action.bank,\n      };\n    default:\n      return state;\n  }\n}\n\n//Selectors\nexport function getValue(state, key) {\n  const value = state[\"home\"][key];\n  switch (key) {\n    default:\n      return value;\n  }\n}\n\nexport function getAllValues(state, key) {\n  return state[\"home\"];\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n    items: PropTypes.array.isRequired,\n    onChangePage: PropTypes.func.isRequired,\n    initialPage: PropTypes.number,\n    pageSize: PropTypes.number\n}\n\nconst defaultProps = {\n    initialPage: 1,\n    pageSize: 10\n}\n\nclass Pagination extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { pager: {}};\n    }\n    componentWillMount() {\n        if (this.props.items && this.props.items.length) {\n            this.setPage(this.props.initialPage);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        // reset page if items array has changed\n        if (this.props.items !== prevProps.items) {\n            this.setPage(this.props.initialPage);\n        }\n    }\n    handlePageSizeChange = event => {\n        this.setState({ pageSize:event.target.value})\n      };\n    setPage(page) {\n        var { items, pageSize } = this.props;\n        // const { pageSize } = this.state.pageSize;\n        // console.log(this.props.pageSize);\n        var pager = this.state.pager;\n\n        if (page < 1 || page > pager.totalPages) {\n            return;\n        }\n\n        // geting new pager object for specified page\n        pager = this.getPager(items.length, page, pageSize);\n\n        // geting new page of items from items array\n        var pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\n\n        // updating the state\n        this.setState({ pager: pager });\n\n        // This call change page function in the parent component\n        this.props.onChangePage(pageOfItems);\n    }\n\n    getPager(totalItems, currentPage, pageSize) {\n        // console.log(pageSize,totalItems,currentPage);\n        // Current page starts from page 1\n        currentPage = currentPage || 1;\n\n        // If pageSize is not mention default page size is 10\n        pageSize = pageSize || 10;\n\n        // calculating total number of number pages\n        var totalPages = Math.ceil(totalItems / pageSize);\n\n        var startPage, endPage;\n        if (totalPages <= 10) {\n            startPage = 1;\n            endPage = totalPages;\n        } else {\n            // Calculating start and end pages if the total number of pages is greater than 10\n            if (currentPage <= 6) {\n                startPage = 1;\n                endPage = 10;\n            } else if (currentPage + 4 >= totalPages) {\n                startPage = totalPages - 9;\n                endPage = totalPages;\n            } else {\n                startPage = currentPage - 5;\n                endPage = currentPage + 4;\n            }\n        }\n\n        // This calculates start and end item indexes\n        var startIndex = (currentPage - 1) * pageSize;\n        var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n        var pages = [...Array((endPage + 1) - startPage).keys()].map(i => startPage + i);\n        return {\n            totalItems: totalItems,\n            currentPage: currentPage,\n            pageSize: pageSize,\n            totalPages: totalPages,\n            startPage: startPage,\n            endPage: endPage,\n            startIndex: startIndex,\n            endIndex: endIndex,\n            pages: pages\n        };\n    }\n\n    render() {\n        const { pageSize } =this.props;\n        console.log(pageSize);\n        var pager = this.state.pager;\n        if (!pager.pages || pager.pages.length <= 1) {\n            // nothing will be displayed when there is only one page\n            return null;\n        }\n\n        return (\n            <div>\n            <ul className=\"pagination\">\n                <li className={pager.currentPage === 1 ? 'disabled' : ''}>\n                    <a onClick={() => this.setPage(1)}>First</a>\n                </li>\n                <li className={pager.currentPage === 1 ? 'disabled' : ''}>\n                    <a onClick={() => this.setPage(pager.currentPage - 1)}>Previous</a>\n                </li>\n                {pager.pages.map((page, index) =>\n                    <li key={index} className={pager.currentPage === page ? 'active' : ''}>\n                        <a onClick={() => this.setPage(page)}>{page}</a>\n                    </li>\n                )}\n                <li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\n                    <a onClick={() => this.setPage(pager.currentPage + 1)}>Next</a>\n                </li>\n                <li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\n                    <a onClick={() => this.setPage(pager.totalPages)}>Last</a>\n                </li>\n            </ul>\n           \n        </div>\n        );\n    }\n}\n\nPagination.propTypes = propTypes;\nPagination.defaultProps = defaultProps;\n\nexport default (Pagination);\n","const home = () =>{\n    return `/`\n  }\n  const bankDetails = (id) =>{\n    return `bank/${id}`\n  }\n  const staticLink = staticLink => {\n    return `/${staticLink}`;\n  };\n  \n  export default {\n    home,\n    staticLink,\n    bankDetails\n  };","export default class CachedSearch {\n    constructor(searchFunction, resultsHandler) {\n      this.searchFunction = searchFunction;\n      this.resultsHandler = resultsHandler;\n  \n      this.query = \"\";\n      this.queryCount = 0;\n      this.cache = {};\n      this.cacheHits = 0;\n      this.cacheHitsHistory = [];\n    }\n  \n    changeQuery(query) {\n      if (query.length < 3) {\n        this.resultsHandler([]);\n        return;\n      }\n      if (this.cache[query]) {\n        this.cacheHits = this.cacheHits + 1;\n        this.queryCount = this.queryCount + 1;\n        this.cacheHitsHistory.concat(query);\n        console.log(\"retrieved query from cache:\", query);\n        this.resultsHandler(this.cache[query]);\n      } else {\n        this.searchFunction(query).then(results => {\n          this.cache[query] = results;\n          this.queryCount = this.queryCount + 1;\n          console.log(\"query added to cache:\", query);\n          this.resultsHandler(results);\n        });\n      }\n    }\n  }\n  ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles, CircularProgress } from '@material-ui/core';\n\nconst styles = theme => ({\n  loadingContainer: {\n    position: 'fixed',\n    width: '100%',\n    top: '50px',\n    paddingTop: '50%',\n    height: '100%',\n    backgroundColor: '#fff',\n    zIndex: '1000',\n    [theme.breakpoints.down('sm')]: {\n      paddingTop: '50%',\n    },\n    [theme.breakpoints.up('lg')]: {\n      paddingTop: '20%',\n    },\n    [theme.breakpoints.only('lg')]: {\n      position: 'fixed',\n      width: '100%',\n      top: '50px',\n      paddingTop: '50%',\n      height: '100%',\n      backgroundColor: '#fff',\n      zIndex: '1000',\n      left: '0px',\n    },\n    [theme.breakpoints.between('sm', 'md')]: {\n      paddingTop: '40%',\n      zIndex: '1000',\n    },\n    [theme.breakpoints.up('md')]: {\n      paddingTop: '25%',\n    },\n  },\n  centered: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n    textAlign: 'center',\n  },\n});\n\nclass Loader extends React.Component {\n  render() {\n    const { classes } = this.props;\n    const loadText = this.props.loadText\n      ? this.props.loadText\n      : 'Please Wait Its Loading....';\n    return (\n      <div className={classes.loadingContainer}>\n        <div className={classes.centered}>\n          <CircularProgress color=\"secondary\" />\n          <br />\n          <br />\n          <Typography variant=\"h5\" component=\"h4\">{loadText}</Typography>\n        </div>\n      </div>\n    );\n  }\n}\n\nLoader.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Loader);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from './redux/actions';\nimport * as selectors from './redux/reducer';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport Pagination from '../../components/Pagination/Pagination';\nimport links from '../../utility/Links';\nimport { Link } from 'react-router-dom';\nimport CachedSearch from '../../components/CachedSearch/CachedSearch';\nimport Loader from '../../components/Loader/Loader'\nimport { OutlinedInput,\n         InputLabel,\n         FormControl,\n         Select,\n         InputBase,\n         withStyles,\n         Grid \n} from '@material-ui/core';\n\nconst styles = theme =>({\n    root: {\n        flexGrow: 1,\n      },\n      title: {\n        flexGrow: 1,\n        display: 'none',\n        marginLeft:35,\n        [theme.breakpoints.up('sm')]: {\n          display: 'block',\n        },\n      },\n      search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n          backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n          marginLeft: theme.spacing(1),\n          width: 'auto',\n        },\n      },\n      searchIcon: {\n        width: theme.spacing(7),\n        fontSize:'14px',\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      },\n      inputRoot: {\n        color: 'inherit',\n      },\n      inputInput: {\n        padding: theme.spacing(7),\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        fontSize:'14px',\n        [theme.breakpoints.up('sm')]: {\n          width: 120,\n          '&:focus': {\n            width: 200,\n            '&::placeholder':{\n              color: '#ec407a',\n              opacity: 1,\n              fontSize:'14px'\n            }\n          },\n        },\n       \n      },\n      paginationContainer:{\n        margin:'50px 20px 10px 25px'\n      }\n      ,\n      formControl: {\n        margin: theme.spacing(3),\n        minWidth: 120,\n      },\n      selectEmpty: {\n        marginTop: theme.spacing(2),\n      },\n      selectPaddingOpt:{\n        margin:'10px',\n        fontSize:'14px',\n        color: '#ec407a',\n      },\n      tbleHeader:{\n        backgroundColor: fade('#ec407a', 0.75),\n        color:'white',\n      }\n  })\n\nclass Home extends Component{\n constructor(){\n   super()\n      this.state = {\n        pageOfItems: [],\n        cityName:'Bangalore',\n        query: \"\",\n        results: [],\n        pageSize:10,\n        labelWidth:0,\n        loadText:'Please Wait Its Loading....'\n    };\n }\n  componentDidMount(){\n      this.props.dispatch(actions.getBankData('bangalore'));\n  }\n  onChangePage =(pageOfItems)=>{\n    this.setState({ pageOfItems: pageOfItems });\n}\n  handleChange = event => {\n    this.props.dispatch(actions.getBankData(event.target.value));\n    this.setState({\n      cityName:event.target.value,\n      loadText:`Please wait loading Bank's details from ` + event.target.value\n    })\n  };\n  handleQueryChange =(query)=>{\n    this.setState({ query });\n    this.CachedSearch.changeQuery(query);\n  }\n\n  handleResults=(results)=>{\n    this.setState({ pageOfItems:results });\n  }\n  handlePageSizeChange = event => {\n    this.setState({ pageSize:event.target.value})\n  };\n    render(){\n        const { bank,classes,loading} = this.props;\n        // console.log(bank);\n        const search = query =>\n          new Promise((resolve, reject) => {\n            const regex = new RegExp(`^${query}`, \"i\");\n            console.log(bank);\n            const results = bank.filter(dataField => {\n              return (\n                regex.test(dataField.ifsc) ||\n                regex.test(dataField.bank_name) ||\n                regex.test(dataField.bank_id) ||\n                regex.test(dataField.branch) ||\n                regex.test(dataField.address) ||\n                regex.test(dataField.city) ||\n                regex.test(dataField.state) \n              );\n            });\n            resolve(results);\n          });\n          this.CachedSearch = new CachedSearch(search, this.handleResults);\n          // Storing data in localstorage\n          localStorage.setItem('bankLocalData',JSON.stringify(bank));\n          if(loading){\n            return<Loader loadText={this.state.loadText}/>\n          }else{\n        return(\n            <>  \n               <br/>\n                    <div className={['container'].join(' ')}>\n                     <Grid container\n                              direction=\"row\"\n                              justify=\"space-between\"\n                              alignItems=\"center\"\n                              >\n                      <Grid item>\n                    <FormControl variant=\"outlined\" className={classes.formControl}>\n                          <InputLabel\n                            ref={ref => {\n                              this.InputLabelRef = ref;\n                            }}\n                            htmlFor=\"explore-city\"\n                          />\n                          <Select\n                            native\n                            value={this.state.cityName}\n                            onChange={this.handleChange}\n                            style={{ height: '30px',fontSize:'14px'}}\n                            input={\n                              <OutlinedInput\n                                name=\"city\"\n                                labelWidth={this.state.labelWidth}\n                                id=\"explore-city\"\n                              />\n                            }\n                          >\n                            {['Bangalore','Mysore','Mumbai','Delhi','Patna'].map(city => (\n                              <option key={city + 'i'} value={city} className={classes.selectPaddingOpt}>\n                                {city}\n                              </option>\n                            ))}\n                          </Select>\n                        </FormControl>\n                        </Grid>\n                    <Grid item>\n                    <div className={classes.search}>\n                      <div className={classes.searchIcon}>\n                        <SearchIcon />\n                      </div>\n                      <InputBase\n                        placeholder=\"Search…\"\n                        onChange={({ target: { value } }) => this.handleQueryChange(value)}\n                        classes={{\n                          root: classes.inputRoot,\n                          input: classes.inputInput,\n                        }}\n                        inputProps={{ 'aria-label': 'Search' }}\n                      />\n                    </div>\n                    </Grid>\n                    </Grid>\n                    </div>\n            <br/><br/>\n                <div className={[\"container\"].join(' ')}>\n                    <div className={[\"text-left\"].join(' ')}>\n                        <table className={[\"table table-dark table-responsive\"].join(' ')}>\n                            <thead className={[\"thead-dark\",classes.tbleHeader].join(' ')} >\n                                <tr>\n                                <th scope=\"col\">IFSC</th>\n                                <th scope=\"col\">Branch Name</th>\n                                <th scope=\"col\">ID</th>\n                                <th scope=\"col\">Branch</th>\n                                <th scope=\"col\">Address</th>\n                                <th scope=\"col\">District</th>\n                                <th scope=\"col\">State</th>\n                                </tr>\n                            </thead>\n                           { \n                          this.state.pageOfItems.map(item =>\n                            <tbody key={'i'+item.ifsc}>\n                              <tr>\n                                <td>\n                                    <Link to={links.bankDetails(item.bank_id)}>\n                                      {item.ifsc}\n                                    </Link>\n                                  </td>\n                                <td>\n                                    <Link to={links.bankDetails(item.bank_id)}>\n                                      {item.bank_name}\n                                    </Link>\n                                  </td>\n                                <td>\n                                    <Link to={links.bankDetails(item.bank_id)}>\n                                      {item.bank_id}\n                                    </Link>\n                                  </td>\n                                <td>\n                                    <Link to={links.bankDetails(item.bank_id)}>\n                                      {item.branch}\n                                    </Link>\n                                  </td>\n                                <td>\n                                    <Link to={links.bankDetails(item.bank_id)}>\n                                      {item.address}\n                                    </Link>\n                                  </td>\n                                <td>\n                                    <Link to={links.bankDetails(item.bank_id)}>\n                                      {item.district}\n                                    </Link>\n                                  </td>\n                                <td>\n                                    <Link to={links.bankDetails(item.bank_id)}>\n                                      {item.state}\n                                    </Link>\n                                  </td>\n                              </tr>\n                        </tbody>\n                        )\n                           }\n                            </table>\n                        <Grid container\n                              direction=\"row\"\n                              justify=\"space-between\"\n                              alignItems=\"center\"\n                              >\n                          <Grid item>\n                        <Pagination items={bank} onChangePage={this.onChangePage} pageSize={Number(this.state.pageSize)}/>\n                        </Grid>\n                        <Grid item>\n                        <FormControl variant=\"outlined\" className={classes.formControl}>\n                          <InputLabel\n                            ref={ref => {\n                              this.InputPageSizeRef = ref;\n                            }}\n                            htmlFor=\"pageDataSize\"\n                          />\n                          <Select\n                            native\n                            value={this.state.pageSize}\n                            onChange={this.handlePageSizeChange}\n                            style={{ height: '30px' }}\n                            input={\n                              <OutlinedInput\n                                name=\"pageSize\"\n                                labelWidth={this.state.labelWidth}\n                                id=\"pageDataSize\"\n                              />\n                            }\n                          >\n                            {[10,50,100,200,500].map(pgSize => (\n                              <option key={pgSize + 'i'} value={pgSize} className={classes.selectPaddingOpt}>\n                                {pgSize}\n                              </option>\n                            ))}\n                          </Select>\n                        </FormControl>\n                        </Grid>\n                        </Grid> \n                    </div>\n                </div>\n                <br/><br/>\n            </>\n        )\n      }\n  }\n}\nfunction mapStateToProps(state) {\n    return selectors.getAllValues(state);\n  }\nexport default connect(mapStateToProps)(withStyles(styles)(Home));","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport BankDetails from '../pages/BankDetails';\nimport Home from '../pages/Home';\n\nclass  AppRoutes extends React.Component{\n    render(){\n        const { match } = this.props;\n            return(\n                <Switch>\n                    <Route path={`${match.path}/`} component={Home}/>\n                    <Route path={`${match.path}bank/:bank_id`} component={BankDetails}/>\n                </Switch>\n            )\n        }\n}\nexport default AppRoutes;","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport links from '../../utility/Links';\n\nconst styles = theme =>({\n    root: {\n        flexGrow: 1,\n      },\n      title: {\n        flexGrow: 1,\n        fontSize:'1.2em',\n        display: 'none',\n        color:'white',\n        [theme.breakpoints.up('sm')]: {\n          display: 'block',\n        },\n      },\n      AppContainer:{\n        background:'#3379b7'\n      }\n      \n})\n\nexport default withStyles(styles)(({classes}) =>{\n return(\n    <div className={classes.root}>\n      <AppBar position=\"static\"className={classes.AppContainer} >\n        <Toolbar>\n          <Link to={links.home()} style={{textDecoration:'none'}}>\n            <Typography className={classes.title} variant=\"h6\" noWrap>\n             Front End Coding Challenge\n            </Typography>\n          </Link>\n        </Toolbar>\n      </AppBar>\n    </div>\n )\n})","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme =>({\n    root: {\n        flexGrow: 1,\n      },\n      title: {\n        flexGrow: 1,\n        textAlign:'center',\n        color:'white',\n        fontSize:'1.2em',\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n          display: 'block',\n        },\n      },\n      FootContainer:{\n        background:'#3379b7'\n      }\n})\n\n\nexport default withStyles(styles)(({classes}) =>{\n    return(\n        <div className={classes.root}>\n            <AppBar position=\"static\" className={classes.FootContainer}>\n                <Toolbar>\n                <Typography className={classes.title} variant=\"h6\" noWrap>\n                    Developed By Anit Kumar <span role=\"img\" aria-label=\"happy mode\">😄</span>\n                </Typography>\n                </Toolbar>\n            </AppBar>\n    </div>\n    )\n})","import React from 'react';\nimport { HashRouter as Router, Route, Switch}  from 'react-router-dom';\nimport AppRoute from './routes/AppRoute';\nimport NavBar from './components/NavBar/NavBar';\nimport Footer from './components/Footer/Footer';\n\nconst AppContainer =() =>{\n  return (\n    <Router>\n         <Route component={NavBar}/>\n         <Switch>\n           <Route component={AppRoute}/>\n         </Switch>\n         <Route component={Footer}/>\n    </Router>\n  );\n}\n\nconst App = ()=>{\n  return(\n    <Router>\n      <Route component={AppContainer}/>\n    </Router>\n  )\n}\n\nexport default App;","import { combineReducers } from 'redux';\nimport home from '../pages/Home/redux/reducer.js';\n\nconst reducer = combineReducers({\n  home,\n});\n\nexport default reducer;\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './rootReducer';\n\nconst middlewares = [thunk];\n\nif (\n  process.env.NODE_ENV !== 'production' &&\n  process.env.REACT_APP_REDUX_LOGGER === 'true'\n) {\n  middlewares.push(require('redux-logger').logger);\n}\n\nconst store = compose(applyMiddleware(...middlewares))(createStore)(reducer);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}