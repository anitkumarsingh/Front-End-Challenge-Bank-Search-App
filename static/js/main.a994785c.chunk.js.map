{"version":3,"sources":["pages/BankDetails/index.js","pages/Home/redux/actionTypes.js","api/index.js","pages/Home/redux/actions.js","pages/Home/redux/reducer.js","components/Pagination/Pagination.js","utility/Links.js","components/CachedSearch/CachedSearch.js","components/Loader/Loader.js","pages/FavouriteBanks/index.js","pages/Home/index.js","routes/AppRoute.js","components/NavBar/NavBar.js","components/Footer/Footer.js","App.js","store/rootReducer.js","store/index.js","serviceWorker.js","index.js"],"names":["BankDetails","state","bankID","this","props","match","params","bank_id","setState","_this2","firstArray","JSON","parse","localStorage","getItem","filter","element","Number","slice","classes","item","map","items","react_default","a","createElement","className","cardContainer","key","Card","card","CardMedia","media","image","title","bank_name","CardContent","Typography","variant","component","bottomDetails","city","ifsc","branch","address","Fragment","Component","withStyles","theme","boxShadow","&:hover","transition","height","paddingTop","marginLeft","marginRight","width","marginBottom","marginTop","margin","fontSize","LOADING","LOADED","api","transformCityCase","toUpperCase","fetch","concat","response","json","results","console","log","_context","t0","getBankData","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","getState","bank","wrap","prev","next","type","types","getBankDetails","sent","stop","_x","_x2","apply","arguments","initialState","Immutable","loading","Pagination","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handlePageSizeChange","event","pageSize","target","value","pager","length","setPage","initialPage","prevProps","prevState","page","_this$props","totalPages","getPager","pageOfItems","startIndex","endIndex","onChangePage","totalItems","currentPage","startPage","endPage","Math","ceil","min","pages","toConsumableArray","Array","keys","i","onClick","index","React","Links","id","CachedSearch","searchFunction","resultsHandler","query","queryCount","cache","cacheHits","cacheHitsHistory","then","Loader","loadText","loadingContainer","centered","CircularProgress","color","_loadingContainer","position","top","backgroundColor","zIndex","defineProperty","breakpoints","down","up","only","left","between","display","justifyContent","flexDirection","alignItems","textAlign","FavouriteBank","data","sessionStorage","style","fade","scope","fv","floor","random","Home","handleChange","actions","cityName","handleQueryChange","changeQuery","handleResults","labelWidth","myFavoriteBanks","isFaved","BankName","forEach","document","getElementById","Promise","resolve","reject","regex","RegExp","dataField","test","setItem","stringify","components_Loader_Loader","join","Grid","container","direction","justify","FormControl","formControl","InputLabel","ref","InputLabelRef","htmlFor","Select","native","onChange","input","OutlinedInput","name","selectPaddingOpt","search","searchIcon","Search_default","InputBase","placeholder","_ref2","root","inputRoot","inputInput","inputProps","aria-label","tbleHeader","addFavoriteChange","react_router_dom","to","links","district","components_Pagination_Pagination","InputPageSizeRef","pgSize","FavouriteBanks","connect","selectors","flexGrow","borderRadius","shape","palette","common","white","spacing","pointerEvents","padding","transitions","create","&:focus","&::placeholder","opacity","paginationContainer","minWidth","selectEmpty","AppRoutes","react_router","path","FavBank","AppContainer","background","AppBar","Toolbar","textDecoration","noWrap","FootContainer","role","NavBar","AppRoute","Footer","App","reducer","combineReducers","home","undefined","action","objectSpread","middlewares","thunk","store","compose","applyMiddleware","createStore","Boolean","window","location","hostname","ReactDOM","render","es","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a994785c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst Styles = theme => ({\n    card: {\n    //   maxWidth: 545,\n    boxShadow: '12px 15px 20px rgba(0, 0, 0, 0.1)',\n    '&:hover': {\n      boxShadow: '12px 15px 20px rgba(0, 0, 0, 0.1)',\n      transition: \"0.2s box-shadow ease-in-out, 0.2s background-color ease-in-out, 0.2s border-color ease-in-out\"\n    },\n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n    cardContainer:{\n        marginLeft:'auto',\n        marginRight:'auto',\n        width:'70%',\n        marginBottom:50,\n        marginTop:50\n    },\n    bottomDetails:{\n        margin:'5px 0 5px 0'\n    },\n    title:{\n        fontSize:'5em'\n    }\n  });\n  \n\nclass BankDetails extends Component{ \n    state={\n        bankID:'',\n    }\n    componentDidMount(){\n        let bankID = this.props.match.params.bank_id;\n        this.setState({bankID:bankID});\n    }\n    render(){\n        // console.log(this.state.bankID)\n        const retrievingData = JSON.parse(localStorage.getItem('bankLocalData'))\n        const newArray = retrievingData.filter(element => element.bank_id === Number(this.state.bankID));\n        const firstArray = newArray.slice(0,1);\n        const { classes } =this.props;\n        // console.log(firstArray)\n        const item = firstArray.map(items=>{\n            return(\n                <div className={classes.cardContainer} key={items.bank_id +'p'}>\n                <Card className={classes.card} >\n                    <CardMedia\n                        className={classes.media}\n                        image=\"Images/bank2.jpeg\"\n                        title={items.bank_name}\n                    />\n                    <CardContent>\n                    <Typography variant=\"h5\" component=\"h2\" className={classes.bottomDetails}>\n                         Bank Name : {items.bank_name}\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h2\" className={classes.bottomDetails}>\n                         Location : {items.city +' ,' +items.state}\n                        </Typography>\n                        <hr/>\n                        <Typography variant=\"h5\" component=\"h2\" className={classes.bottomDetails} >\n                         IFSC : {items.ifsc} \n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h2\"  className={classes.bottomDetails} >\n                         Branch : {items.branch} \n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h2\"  className={classes.bottomDetails} >\n                         Address : {items.address}   \n                        </Typography>\n                    </CardContent>\n                    \n            </Card>\n            </div>\n            )\n        })\n    return(\n        <>\n          {item}\n        </>\n    )\n}\n}\nexport default withStyles(Styles)(BankDetails);","export const LOADING = 'home.LOADING';\nexport const LOADED = 'home.LOADED';","// This file contains api call\nconst API_DOMAIN = 'https://vast-shore-74260.herokuapp.com';\n\nclass API {\n  async getBankDetails(city) {\n     let transformCityCase = city.toUpperCase(); \n    try {\n      let response = await fetch(`${API_DOMAIN}/banks?city=${transformCityCase}`);\n      let results = await response.json();\n      // console.log(response);\n      return results;\n    } catch (error) {\n      console.log(error);\n      return [];\n    }\n  }\n  \n}\n\nexport default new API();","import * as types from './actionTypes';\nimport api from '../../../api';\n\nexport function getBankData(city) {\n  // body...\n  return async (dispatch, getState) => {\n    dispatch({\n      type: types.LOADING,\n    });\n    try {\n      const bank = await api.getBankDetails(city);\n      // console.log(bank)\n      dispatch({\n        type: types.LOADED,\n        bank,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n","import * as types from './actionTypes';\nimport Immutable from 'seamless-immutable';\n\nconst initialState = Immutable({\n  loading: true,\n  bank: [],\n});\n\nexport default function reduce(state = initialState, action = {}) {\n  switch (action.type) {\n    case types.LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case types.LOADED:\n      return {\n        ...state,\n        loading: false,\n        bank: action.bank,\n      };\n    default:\n      return state;\n  }\n}\n\n//Selectors\nexport function getValue(state, key) {\n  const value = state[\"home\"][key];\n  switch (key) {\n    default:\n      return value;\n  }\n}\n\nexport function getAllValues(state, key) {\n  return state[\"home\"];\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n    items: PropTypes.array.isRequired,\n    onChangePage: PropTypes.func.isRequired,\n    initialPage: PropTypes.number,\n    pageSize: PropTypes.number\n}\n\nconst defaultProps = {\n    initialPage: 1,\n    pageSize: 10\n}\n\nclass Pagination extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { pager: {},pageSize:10};\n    }\n    componentWillMount() {\n        if (this.props.items && this.props.items.length) {\n            this.setPage(this.props.initialPage);\n        }\n    }\n    componentDidMount(){\n        console.log(this.props.pageSize);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        // reset page if items array has changed\n        if (this.props.items !== prevProps.items) {\n            this.setPage(this.props.initialPage);\n        }\n    }\n    handlePageSizeChange = event => {\n        this.setState({ pageSize:event.target.value})\n      };\n    setPage(page) {\n        var { items, pageSize } = this.props;\n        // const { pageSize } = this.state.pageSize;\n        console.log(this.props.pageSize);\n        var pager = this.state.pager;\n\n        if (page < 1 || page > pager.totalPages) {\n            return;\n        }\n\n        // geting new pager object for specified page\n        pager = this.getPager(items.length, page, pageSize);\n\n        // geting new page of items from items array\n        var pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\n\n        // updating the state\n        this.setState({ pager: pager });\n\n        // This call change page function in the parent component\n        this.props.onChangePage(pageOfItems);\n    }\n\n    getPager(totalItems, currentPage, pageSize) {\n        // console.log(pageSize,totalItems,currentPage);\n        // Current page starts from page 1\n        currentPage = currentPage || 1;\n\n        // If pageSize is not mention default page size is 10\n        pageSize = pageSize || 10;\n\n        // calculating total number of number pages\n        var totalPages = Math.ceil(totalItems / pageSize);\n\n        var startPage, endPage;\n        if (totalPages <= 10) {\n            startPage = 1;\n            endPage = totalPages;\n        } else {\n            // Calculating start and end pages if the total number of pages is greater than 10\n            if (currentPage <= 6) {\n                startPage = 1;\n                endPage = 10;\n            } else if (currentPage + 4 >= totalPages) {\n                startPage = totalPages - 9;\n                endPage = totalPages;\n            } else {\n                startPage = currentPage - 5;\n                endPage = currentPage + 4;\n            }\n        }\n\n        // This calculates start and end item indexes\n        var startIndex = (currentPage - 1) * pageSize;\n        var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n        var pages = [...Array((endPage + 1) - startPage).keys()].map(i => startPage + i);\n        return {\n            totalItems: totalItems,\n            currentPage: currentPage,\n            pageSize: pageSize,\n            totalPages: totalPages,\n            startPage: startPage,\n            endPage: endPage,\n            startIndex: startIndex,\n            endIndex: endIndex,\n            pages: pages\n        };\n    }\n\n    render() {\n        const { pageSize } =this.props;\n        console.log(pageSize);\n        var pager = this.state.pager;\n        if (!pager.pages || pager.pages.length <= 1) {\n            // nothing will be displayed when there is only one page\n            return null;\n        }\n\n        return (\n            <div>\n            <ul className=\"pagination\">\n                <li className={pager.currentPage === 1 ? 'disabled' : ''}>\n                    <a onClick={() => this.setPage(1)}>First</a>\n                </li>\n                <li className={pager.currentPage === 1 ? 'disabled' : ''}>\n                    <a onClick={() => this.setPage(pager.currentPage - 1)}>Previous</a>\n                </li>\n                {pager.pages.map((page, index) =>\n                    <li key={index} className={pager.currentPage === page ? 'active' : ''}>\n                        <a onClick={() => this.setPage(page)}>{page}</a>\n                    </li>\n                )}\n                <li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\n                    <a onClick={() => this.setPage(pager.currentPage + 1)}>Next</a>\n                </li>\n                <li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\n                    <a onClick={() => this.setPage(pager.totalPages)}>Last</a>\n                </li>\n            </ul>\n        </div>\n        );\n    }\n}\n\nPagination.propTypes = propTypes;\n// Pagination.defaultProps = defaultProps;\n\nexport default (Pagination);\n","const home = () =>{\n    return `/`\n  }\n  const bankDetails = (id) =>{\n    return `bank/${id}`\n  }\n  const staticLink = staticLink => {\n    return `/${staticLink}`;\n  };\n  \n  export default {\n    home,\n    staticLink,\n    bankDetails\n  };","export default class CachedSearch {\n    constructor(searchFunction, resultsHandler) {\n      this.searchFunction = searchFunction;\n      this.resultsHandler = resultsHandler;\n  \n      this.query = \"\";\n      this.queryCount = 0;\n      this.cache = {};\n      this.cacheHits = 0;\n      this.cacheHitsHistory = [];\n    }\n  \n    changeQuery(query) {\n      if (query.length < 3) {\n        this.resultsHandler([]);\n        return;\n      }\n      if (this.cache[query]) {\n        this.cacheHits = this.cacheHits + 1;\n        this.queryCount = this.queryCount + 1;\n        this.cacheHitsHistory.concat(query);\n        console.log(\"retrieved query from cache:\", query);\n        this.resultsHandler(this.cache[query]);\n      } else {\n        this.searchFunction(query).then(results => {\n          this.cache[query] = results;\n          this.queryCount = this.queryCount + 1;\n          console.log(\"query added to cache:\", query);\n          this.resultsHandler(results);\n        });\n      }\n    }\n  }\n  ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles, CircularProgress } from '@material-ui/core';\n\nconst styles = theme => ({\n  loadingContainer: {\n    position: 'fixed',\n    width: '100%',\n    top: '50px',\n    paddingTop: '50%',\n    height: '100%',\n    backgroundColor: '#fff',\n    zIndex: '1000',\n    [theme.breakpoints.down('sm')]: {\n      paddingTop: '50%',\n    },\n    [theme.breakpoints.up('lg')]: {\n      paddingTop: '20%',\n    },\n    [theme.breakpoints.only('lg')]: {\n      position: 'fixed',\n      width: '100%',\n      top: '50px',\n      paddingTop: '50%',\n      height: '100%',\n      backgroundColor: '#fff',\n      zIndex: '1000',\n      left: '0px',\n    },\n    [theme.breakpoints.between('sm', 'md')]: {\n      paddingTop: '40%',\n      zIndex: '1000',\n    },\n    [theme.breakpoints.up('md')]: {\n      paddingTop: '25%',\n    },\n  },\n  centered: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n    textAlign: 'center',\n  },\n});\n\nclass Loader extends React.Component {\n  render() {\n    const { classes } = this.props;\n    const loadText = this.props.loadText\n      ? this.props.loadText\n      : 'Please Wait Its Loading....';\n    return (\n      <div className={classes.loadingContainer}>\n        <div className={classes.centered}>\n          <CircularProgress color=\"secondary\" />\n          <br />\n          <br />\n          <Typography variant=\"h5\" component=\"h4\">{loadText}</Typography>\n        </div>\n      </div>\n    );\n  }\n}\n\nLoader.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Loader);\n","import React,{ Component} from 'react';\nimport { Typography, } from '@material-ui/core';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\n\n\nclass FavouriteBank extends Component{\n    state={\n\n    }\n    componentDidMount(){\n       const data = sessionStorage.getItem(\"favouteData\");\n       console.log(data);\n    }\n render(){\n     return(\n       <div className=\"container\">\n           {this.props.data.length >0 ? (\n               <>\n                <Typography style={{textAlign:'center',fontSize:'1.2em'}}>\n                    {'List Of Favourite Banks'}\n                </Typography>\n                <table className=\"table table-dark\" >\n                    <thead style={{ backgroundColor: fade('#ec407a', 0.75),color:'white'}}>\n                        <tr>\n                            <th scope=\"col\">Bank Name</th>\n                        </tr>  \n                    </thead>\n                    {this.props.data.map(fv=>\n                    <tbody key={Math.floor(Math.random() * 10000) + 1}>\n                        <tr>\n                            <td style={{color:'green'}}>{fv}</td>\n                        </tr>\n                    </tbody>\n                    \n                    )}\n                    </table>\n                </>\n           ):(\n               ''\n           )}\n       </div>\n     )\n }\n}\nexport default FavouriteBank;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from './redux/actions';\nimport * as selectors from './redux/reducer';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport Pagination from '../../components/Pagination/Pagination';\nimport links from '../../utility/Links';\nimport { Link } from 'react-router-dom';\nimport CachedSearch from '../../components/CachedSearch/CachedSearch';\nimport Loader from '../../components/Loader/Loader';\nimport FavBnks from '../FavouriteBanks/index';\nimport './index.css';\n\nimport { OutlinedInput,\n         InputLabel,\n         FormControl,\n         Select,\n         InputBase,\n         withStyles,\n         Grid \n} from '@material-ui/core';\n\nconst styles = theme =>({\n    root: {\n        flexGrow: 1,\n      },\n      title: {\n        flexGrow: 1,\n        display: 'none',\n        marginLeft:35,\n        [theme.breakpoints.up('sm')]: {\n          display: 'block',\n        },\n      },\n      search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n          backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n          marginLeft: theme.spacing(1),\n          width: 'auto',\n        },\n      },\n      searchIcon: {\n        width: theme.spacing(7),\n        fontSize:'14px',\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      },\n      inputRoot: {\n        color: 'inherit',\n      },\n      inputInput: {\n        padding: theme.spacing(7),\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        fontSize:'14px',\n        [theme.breakpoints.up('sm')]: {\n          width: 120,\n          '&:focus': {\n            width: 200,\n            '&::placeholder':{\n              color: '#ec407a',\n              opacity: 1,\n              fontSize:'14px'\n            }\n          },\n        },\n       \n      },\n      paginationContainer:{\n        margin:'50px 20px 10px 25px'\n      }\n      ,\n      formControl: {\n        margin: theme.spacing(3),\n        minWidth: 120,\n      },\n      selectEmpty: {\n        marginTop: theme.spacing(2),\n      },\n      selectPaddingOpt:{\n        margin:'10px',\n        fontSize:'14px',\n        color: '#ec407a',\n      },\n      tbleHeader:{\n        backgroundColor: fade('#ec407a', 0.75),\n        color:'white',\n      },\n  })\n\n \nclass Home extends Component{\n constructor(){\n   super()\n      this.state = {\n        pageOfItems: [],\n        cityName:'Bangalore',\n        query: \"\",\n        results: [],\n        pageSize:10,\n        labelWidth:0,\n        loadText:'Please Wait Its Loading....',\n        myFavoriteBanks:[],\n        isFaved: false,\n        color:'black'\n    };\n }\n  componentDidMount(){\n      this.props.dispatch(actions.getBankData('bangalore'));\n  }\n  onChangePage =(pageOfItems)=>{\n    this.setState({ pageOfItems: pageOfItems });\n}\n  handleChange = event => {\n    this.props.dispatch(actions.getBankData(event.target.value));\n    this.setState({\n      cityName:event.target.value,\n      loadText:`Please wait loading Bank's details from ` + event.target.value\n    })\n  };\n  handleQueryChange =(query)=>{\n    this.setState({ query });\n    this.CachedSearch.changeQuery(query);\n  }\n\n  handleResults=(results)=>{\n    this.setState({ pageOfItems:results });\n  }\n  handlePageSizeChange = event => {\n    this.setState({ pageSize:event.target.value})\n  };\n\n  addFavoriteChange(ifsc) {\n    const retrievingData = JSON.parse(localStorage.getItem('bankLocalData'))\n    const newArray = retrievingData.filter(element => element.ifsc === ifsc);\n    const BankName = newArray.map(item=>item.bank_name);\n    this.setState({myFavoriteBanks:[...this.state.myFavoriteBanks,BankName]})\n  \n    this.state.myFavoriteBanks.forEach(function() {\n    document.getElementById(ifsc).className = 'fav';\n   });\n  }\n    render(){\n        const { bank,classes,loading} = this.props;\n        // console.log(bank);\n        const search = query =>\n          new Promise((resolve, reject) => {\n            const regex = new RegExp(`^${query}`, \"i\");\n            const results = bank.filter(dataField => {\n              return (\n                regex.test(dataField.ifsc) ||\n                regex.test(dataField.bank_name) ||\n                regex.test(dataField.bank_id) ||\n                regex.test(dataField.branch) ||\n                regex.test(dataField.address) ||\n                regex.test(dataField.city) ||\n                regex.test(dataField.state) \n              );\n            });\n            resolve(results);\n          });\n          this.CachedSearch = new CachedSearch(search, this.handleResults);\n          // Storing data in localstorage\n          localStorage.setItem('bankLocalData',JSON.stringify(bank));\n          if(loading){\n            return<Loader loadText={this.state.loadText}/>\n          }else{\n        return(\n            <>  \n               <br/>\n                <div className={['container'].join(' ')}>\n                  <Grid container\n                          direction=\"row\"\n                          justify=\"space-between\"\n                          alignItems=\"center\"\n                          >\n                    <Grid item>\n                      <FormControl variant=\"outlined\" \n                                   className={classes.formControl}\n                                   >\n                            <InputLabel\n                              ref={ref => {\n                                this.InputLabelRef = ref;\n                              }}\n                              htmlFor=\"explore-city\"\n                            />\n                            <Select\n                              native\n                              value={this.state.cityName}\n                              onChange={this.handleChange}\n                              style={{ height: '30px',fontSize:'14px'}}\n                              input={\n                                <OutlinedInput\n                                  name=\"city\"\n                                  labelWidth={this.state.labelWidth}\n                                  id=\"explore-city\"\n                                />\n                              }\n                            >\n                              {['Bangalore','Mysore','Mumbai','Delhi','Patna'].map(city => (\n                                <option key={city + 'i'} value={city} className={classes.selectPaddingOpt}>\n                                  {city}\n                                </option>\n                              ))}\n                            </Select>\n                          </FormControl>\n                      </Grid>\n                  <Grid item>\n                    <div className={classes.search}>\n                      <div className={classes.searchIcon}>\n                        <SearchIcon />\n                      </div>\n                      <InputBase\n                        placeholder=\"Search…\"\n                        onChange={({ target: { value } }) => this.handleQueryChange(value)}\n                        classes={{\n                          root: classes.inputRoot,\n                          input: classes.inputInput,\n                        }}\n                        inputProps={{ 'aria-label': 'Search' }}\n                      />\n                    </div>\n                  </Grid>\n                 </Grid>\n              </div>\n            <br/><br/>\n                <div className={[\"container\",\"table-responsive\"].join(' ')}>\n                    <div className={[\"text-left\"].join(' ')}>\n                        <table className={[\"table\", \"table-dark \"].join(' ')}>\n                            <thead className={[\"thead-dark\",classes.tbleHeader].join(' ')} >\n                                <tr>\n                                  <th scope=\"col\">IFSC</th>\n                                  <th scope=\"col\">Branch Name</th>\n                                  <th scope=\"col\">ID</th>\n                                  <th scope=\"col\">Branch</th>\n                                  <th scope=\"col\">Address</th>\n                                  <th scope=\"col\">District</th>\n                                  <th scope=\"col\">State</th>\n                                </tr>\n                            </thead>\n                           { \n                          this.state.pageOfItems.map(item =>\n                            <tbody key={'i'+item.ifsc} >\n                              <tr className=\"list\">\n                                <td onClick={()=>this.addFavoriteChange(item.ifsc)} \n                                    style={{color:'#23527c'}} id={item.ifsc}>\n                                      {item.ifsc}\n                                  </td>\n                                <td>\n                                    <Link to={links.bankDetails(item.bank_id)}>\n                                      {item.bank_name}\n                                    </Link>\n                                  </td>\n                                <td>\n                                    <Link to={links.bankDetails(item.bank_id)}>\n                                      {item.bank_id}\n                                    </Link>\n                                  </td>\n                                <td>\n                                    <Link to={links.bankDetails(item.bank_id)}>\n                                      {item.branch}\n                                    </Link>\n                                  </td>\n                                <td>\n                                    <Link to={links.bankDetails(item.bank_id)}>\n                                      {item.address}\n                                    </Link>\n                                  </td>\n                                <td>\n                                    <Link to={links.bankDetails(item.bank_id)}>\n                                      {item.district}\n                                    </Link>\n                                  </td>\n                                <td>\n                                    <Link to={links.bankDetails(item.bank_id)}>\n                                      {item.state}\n                                    </Link>\n                                  </td>\n                              </tr>\n                            </tbody>\n                          )}\n                        </table>\n                        <Grid container\n                              direction=\"row\"\n                              justify=\"space-between\"\n                              alignItems=\"center\"\n                              >\n                          <Grid item>\n                            <Pagination items={bank} onChangePage={this.onChangePage} \n                                        pageSize={Number(this.state.pageSize)}\n                                        />\n                          </Grid>\n                          <Grid item>\n                            <FormControl variant=\"outlined\" className={classes.formControl}>\n                              <InputLabel\n                                ref={ref => {\n                                  this.InputPageSizeRef = ref;\n                                }}\n                                htmlFor=\"pageDataSize\"\n                              />\n                              <Select\n                                native\n                                value={this.state.pageSize}\n                                onChange={this.handlePageSizeChange}\n                                style={{ height: '30px' }}\n                                input={\n                                  <OutlinedInput\n                                    name=\"pageSize\"\n                                    labelWidth={this.state.labelWidth}\n                                    id=\"pageDataSize\"\n                                  />\n                                }\n                              >\n                                {[10,50,100,200,500].map(pgSize => (\n                                  <option key={pgSize + 'i'} value={pgSize} className={classes.selectPaddingOpt}>\n                                    {pgSize}\n                                  </option>\n                                ))}\n                              </Select>\n                            </FormControl>\n                          </Grid>\n                        </Grid> \n                    </div>\n                </div>\n                <br/><br/>\n                <div>\n                  <FavBnks data={this.state.myFavoriteBanks}/>\n                </div>\n            </>\n        )\n      }\n  }\n}\nfunction mapStateToProps(state) {\n    return selectors.getAllValues(state);\n  }\nexport default connect(mapStateToProps)(withStyles(styles)(Home));","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport BankDetails from '../pages/BankDetails';\nimport Home from '../pages/Home';\nimport FavBank from '../pages/FavouriteBanks/index';\n\nclass  AppRoutes extends React.Component{\n    render(){\n        const { match } = this.props;\n            return(\n                <Switch>\n                    <Route path={`${match.path}/`} component={Home}/>\n                    <Route path={`${match.path}bank/:bank_id`} component={BankDetails}/>\n                    <Route path={`${match.path}favourite`} component={FavBank}/>\n                </Switch>\n            )\n        }\n}\nexport default AppRoutes;","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport links from '../../utility/Links';\n\nconst styles = theme =>({\n    root: {\n        flexGrow: 1,\n      },\n      title: {\n        flexGrow: 1,\n        fontSize:'1.2em',\n        display: 'none',\n        color:'white',\n        [theme.breakpoints.up('sm')]: {\n          display: 'block',\n        },\n      },\n      AppContainer:{\n        background:'#3379b7'\n      }\n      \n})\n\nexport default withStyles(styles)(({classes}) =>{\n return(\n    <div className={classes.root}>\n      <AppBar position=\"static\"className={classes.AppContainer} >\n        <Toolbar>\n          <Link to={links.home()} style={{textDecoration:'none'}}>\n            <Typography className={classes.title} variant=\"h6\" noWrap>\n             Front End Coding Challenge\n            </Typography>\n          </Link>\n        </Toolbar>\n      </AppBar>\n    </div>\n )\n})","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme =>({\n    root: {\n        flexGrow: 1,\n      },\n      title: {\n        flexGrow: 1,\n        textAlign:'center',\n        color:'white',\n        fontSize:'1.2em',\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n          display: 'block',\n        },\n      },\n      FootContainer:{\n        background:'#3379b7'\n      }\n})\n\n\nexport default withStyles(styles)(({classes}) =>{\n    return(\n        <div className={classes.root}>\n            <AppBar position=\"static\" className={classes.FootContainer}>\n                <Toolbar>\n                <Typography className={classes.title} variant=\"h6\" noWrap>\n                    Developed By Anit Kumar <span role=\"img\" aria-label=\"happy mode\">😄</span>\n                </Typography>\n                </Toolbar>\n            </AppBar>\n    </div>\n    )\n})","import React from 'react';\nimport { HashRouter as Router, Route, Switch}  from 'react-router-dom';\nimport AppRoute from './routes/AppRoute';\nimport NavBar from './components/NavBar/NavBar';\nimport Footer from './components/Footer/Footer';\n\nconst AppContainer =() =>{\n  return (\n    <Router>\n         <Route component={NavBar}/>\n         <Switch>\n           <Route component={AppRoute}/>\n         </Switch>\n         <Route component={Footer}/>\n    </Router>\n  );\n}\n\nconst App = ()=>{\n  return(\n    <Router>\n      <Route component={AppContainer}/>\n    </Router>\n  )\n}\n\nexport default App;","import { combineReducers } from 'redux';\nimport home from '../pages/Home/redux/reducer.js';\n\nconst reducer = combineReducers({\n  home,\n});\n\nexport default reducer;\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './rootReducer';\n\nconst middlewares = [thunk];\n\nif (\n  process.env.NODE_ENV !== 'production' &&\n  process.env.REACT_APP_REDUX_LOGGER === 'true'\n) {\n  middlewares.push(require('redux-logger').logger);\n}\n\nconst store = compose(applyMiddleware(...middlewares))(createStore)(reducer);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}